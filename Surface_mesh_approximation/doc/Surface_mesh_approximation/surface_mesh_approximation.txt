namespace CGAL {
/*!
\mainpage User Manual
\anchor Chapter_Triangulated_Surface_Mesh_Approximation

\cgalAutoToc
\authors Pierre Alliez, Lingjie Zhu

\section sma_introduction Introduction

This package implement the shape approximation algorithm Variational Shape Approximation (VSA). It is a good complement to current Mesh Segmentation Package and even to the mesh decimation one.

\section sma_interface Interface

This package can thus be used either with `Polyhedron_3`, `Surface_mesh`, or
any class model of the concept `FaceGraph` described in \ref chapterBGL.

Approximate a triangle mesh and extract the approximated triangle surface, using:
- `CGAL::vsa_approximate()` : given a triangle mesh, approximate the geometry and output the facet proxy index map.
- `CGAL::vsa_extract()` : given a triangle mesh, approximate the geometry and output the approximated triangle surface.
- `CGAL::vsa_approximate_and_extract()` : given a triangle mesh, approximate the geometry, output the facet proxy index map and extract the approximated triangle surface.

\section sma_examples Examples

\subsection ApproximationExample_1 Approximate a Mesh

The following example calls the functions `CGAL::vsa_extract()` on the input triangle mesh.

\cgalExample{Surface_mesh_approximation/vsa_extraction_example.cpp}

\subsection ApproximationExample_2 Using L2 metric

The following example use the L2 metric to approximate the shape.

\cgalExample{Surface_mesh_approximation/vsa_l2_metric_example.cpp}

\subsection ApproximationExample_3 User-defined Proxy

We could use self-defined proxy and error for the approximation algorithm. In the following example, we define a simple point-wise proxy to achieve a compact patch approximation of the shape:

\cgalExample{Surface_mesh_approximation/vsa_metric_example.cpp}

\section sma_perf Performances

\section sma_history Design and Implementation History

This package is the result of the work of Lingjie Zhu during the 2017 season
of the Google Summer of Code. He has been mentored by Pierre Alliez.
The code is based on an initial research code written by Pierre Alliez in XXXX,
for a paper published at XXXX.

*/

}
